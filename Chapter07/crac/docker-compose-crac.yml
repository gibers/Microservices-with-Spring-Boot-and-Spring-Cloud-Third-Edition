services:
  product-prod:
    image: hands-on/product-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    ports:
      - "8081:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - "./config-repo/prod/product-configuration.yml:/runtime-configuration.yml"

  recommendation-prod:
    image: hands-on/recommendation-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    ports:
      - "8082:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - "./config-repo/prod/recommendation-configuration.yml:/runtime-configuration.yml"

  review-prod:
    image: hands-on/review-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    ports:
      - "8083:8080"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - "./config-repo/prod/review-configuration.yml:/runtime-configuration.yml"

  product-composite-prod:
    image: hands-on/product-composite-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - "./config-repo/prod/product-composite-configuration.yml:/runtime-configuration.yml"

  mongodb:
    image: mongo:6.0.4
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 60

  mysql:
    image: mysql:8.0.32
    mem_limit: 512m
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=review-db-prod
      - MYSQL_USER=user-prod
      - MYSQL_PASSWORD=pwd-prod
    healthcheck:
      test: "/usr/bin/mysql --user=user-prod --password=pwd-prod --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 60
    volumes:
      - "./sql-scripts/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql"

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    restart: always
    mem_limit: 1024m
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    restart: always
    mem_limit: 512m
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  # Azure Monitor agent uses port 8084, so we skip it and uses 8085 instead
  redpanda-ui:
    container_name: redpanda-ui
    image: docker.redpanda.com/redpandadata/console:latest
    restart: always
    ports:
      - 8085:8080
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - zookeeper
      - kafka