version: '2.1'

services:
  product-prod:
    image: product-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - "./config-repo/prod/product-configuration.yml:/runtime-configuration.yml"

  recommendation-prod:
    image: recommendation-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - "./config-repo/prod/recommendation-configuration.yml:/runtime-configuration.yml"

  review-prod:
    image: review-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - "./config-repo/prod/review-configuration.yml:/runtime-configuration.yml"

  product-composite-prod:
    image: product-composite-crac
    cap_add:
      - CHECKPOINT_RESTORE
    mem_limit: 512m
    ports:
      - "8080:8080"
    volumes:
      - "./config-repo/prod/product-composite-configuration.yml:/runtime-configuration.yml"

  mongodb:
    image: mongo:6.0.4
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 60

  mysql:
    image: mysql:8.0.32
    mem_limit: 512m
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=review-db-prod
      - MYSQL_USER=user-prod
      - MYSQL_PASSWORD=pwd-prod
    healthcheck:
      test: "/usr/bin/mysql --user=user-prod --password=pwd-prod --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 60
    volumes:
      - "./sql-scripts/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql"
